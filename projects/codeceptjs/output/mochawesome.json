{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-25T16:18:41.368Z",
    "end": "2024-08-25T16:18:58.947Z",
    "duration": 17579,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "422f11e6-7438-49c4-92a2-aeef46ec861d",
      "title": "",
      "fullFile": "/Users/gisele/Desktop/apps/projects/codeceptjs/e2e/tasks_test.js",
      "file": "/e2e/tasks_test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "63687791-042f-4983-a6a8-9f7e4695de17",
          "title": "tasks",
          "fullFile": "/Users/gisele/Desktop/apps/projects/codeceptjs/e2e/tasks_test.js",
          "file": "/e2e/tasks_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: codeceptjs.beforeSuite in \"tasks\"",
              "fullTitle": "tasks \"before all\" hook: codeceptjs.beforeSuite in \"tasks\"",
              "timedOut": false,
              "duration": 5504,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteSetup(suite)",
              "err": {},
              "uuid": "20be033b-0d1f-49d4-b760-d5e51ddfc8da",
              "parentUUID": "63687791-042f-4983-a6a8-9f7e4695de17",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: codeceptjs.before in \"tasks\"",
              "fullTitle": "tasks \"before each\" hook: codeceptjs.before in \"tasks\"",
              "timedOut": false,
              "duration": 396,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.setup(suite)",
              "err": {},
              "uuid": "f0509b70-06b8-4de5-93f7-c5d3639f63a3",
              "parentUUID": "63687791-042f-4983-a6a8-9f7e4695de17",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: codeceptjs.afterSuite in \"tasks\"",
              "fullTitle": "tasks \"after all\" hook: codeceptjs.afterSuite in \"tasks\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.suiteTeardown(suite)",
              "err": {},
              "uuid": "e9bab9ab-361b-4f7b-a9db-15638945ecc7",
              "parentUUID": "63687791-042f-4983-a6a8-9f7e4695de17",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: finalize codeceptjs in \"tasks\"",
              "fullTitle": "tasks \"after each\" hook: finalize codeceptjs in \"tasks\"",
              "timedOut": false,
              "duration": 111,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scenario.teardown(suite)",
              "err": {},
              "uuid": "70c48a61-da52-4c5f-9203-ef7968643bd9",
              "parentUUID": "63687791-042f-4983-a6a8-9f7e4695de17",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "create new task | {\"name\":\"Fazer Compras\"}",
              "fullTitle": "tasks: create new task | {\"name\":\"Fazer Compras\"}",
              "timedOut": false,
              "duration": 2062,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, taskPage, current }) => {\n    //const porque e imutavel, exemplo se voce por taskname = New Task (sempre que declarar task sera New Task)\n    //let - escopo de bloco, so e lida no bloco que foi definida\n    //const taskName = faker.company.name() \n   // const taskName = 'Fazer Compras' \n    const taskName = current.name\n    \n    I.deleteByHelper(taskName)\n    taskPage.create(taskName)\n    taskPage.haveTask(taskName)",
              "err": {},
              "uuid": "49a7c3d7-f12d-4250-af35-34750f4b1616",
              "parentUUID": "63687791-042f-4983-a6a8-9f7e4695de17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "create new task | {\"name\":\"Organizar casa\"}",
              "fullTitle": "tasks: create new task | {\"name\":\"Organizar casa\"}",
              "timedOut": false,
              "duration": 1389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, taskPage, current }) => {\n    //const porque e imutavel, exemplo se voce por taskname = New Task (sempre que declarar task sera New Task)\n    //let - escopo de bloco, so e lida no bloco que foi definida\n    //const taskName = faker.company.name() \n   // const taskName = 'Fazer Compras' \n    const taskName = current.name\n    \n    I.deleteByHelper(taskName)\n    taskPage.create(taskName)\n    taskPage.haveTask(taskName)",
              "err": {},
              "uuid": "c3b60c93-2a38-4217-8a50-03a3e5c01636",
              "parentUUID": "63687791-042f-4983-a6a8-9f7e4695de17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "create new task | {\"name\":\"Estudar\"}",
              "fullTitle": "tasks: create new task | {\"name\":\"Estudar\"}",
              "timedOut": false,
              "duration": 1210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, taskPage, current }) => {\n    //const porque e imutavel, exemplo se voce por taskname = New Task (sempre que declarar task sera New Task)\n    //let - escopo de bloco, so e lida no bloco que foi definida\n    //const taskName = faker.company.name() \n   // const taskName = 'Fazer Compras' \n    const taskName = current.name\n    \n    I.deleteByHelper(taskName)\n    taskPage.create(taskName)\n    taskPage.haveTask(taskName)",
              "err": {},
              "uuid": "0473d787-7676-4386-936d-373ebefb9d06",
              "parentUUID": "63687791-042f-4983-a6a8-9f7e4695de17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Not create page duplicated",
              "fullTitle": "tasks: Not create page duplicated",
              "timedOut": false,
              "duration": 1676,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "I, taskPage }) => { \n    const taskDuplicated = {\n        name: \"Pagar fatura do cart√£o\",\n        is_done: false\n    }\n    I.deleteByHelper(taskDuplicated.name)\n    I.postTask(taskDuplicated)\n    taskPage.create(taskDuplicated.name)\n    taskPage.popUp('Task already exists!')",
              "err": {},
              "uuid": "0a827b17-c55a-4db1-b0ef-0c836dba4730",
              "parentUUID": "63687791-042f-4983-a6a8-9f7e4695de17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49a7c3d7-f12d-4250-af35-34750f4b1616",
            "c3b60c93-2a38-4217-8a50-03a3e5c01636",
            "0473d787-7676-4386-936d-373ebefb9d06",
            "0a827b17-c55a-4db1-b0ef-0c836dba4730"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6337,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "output"
      },
      "version": "6.2.0"
    }
  }
}